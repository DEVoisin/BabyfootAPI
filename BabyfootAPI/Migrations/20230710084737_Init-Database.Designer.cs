// <auto-generated />
using BabyfootAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BabyfootAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230710084737_Init-Database")]
    partial class InitDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BabyfootAPI.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Elo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RankId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RankId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("BabyfootAPI.Models.PlayerGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FirstPlayerId")
                        .HasColumnType("int");

                    b.Property<int>("FirstPlayerScore")
                        .HasColumnType("int");

                    b.Property<int>("SecondPlayerId")
                        .HasColumnType("int");

                    b.Property<int>("SecondPlayerScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirstPlayerId");

                    b.HasIndex("SecondPlayerId");

                    b.ToTable("PlayerGames");
                });

            modelBuilder.Entity("BabyfootAPI.Models.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EloMax")
                        .HasColumnType("int");

                    b.Property<int>("EloMin")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("BabyfootAPI.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Elo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FirstPlayerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecondPlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirstPlayerId");

                    b.HasIndex("SecondPlayerId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("BabyfootAPI.Models.TeamGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FirstTeamId")
                        .HasColumnType("int");

                    b.Property<int>("FirstTeamScore")
                        .HasColumnType("int");

                    b.Property<int>("SecondTeamId")
                        .HasColumnType("int");

                    b.Property<int>("SecondTeamScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirstTeamId");

                    b.HasIndex("SecondTeamId");

                    b.ToTable("TeamGames");
                });

            modelBuilder.Entity("BabyfootAPI.Models.Player", b =>
                {
                    b.HasOne("BabyfootAPI.Models.Rank", "Rank")
                        .WithMany("Players")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rank");
                });

            modelBuilder.Entity("BabyfootAPI.Models.PlayerGame", b =>
                {
                    b.HasOne("BabyfootAPI.Models.Player", "FirstPlayer")
                        .WithMany("FirstPlayerGames")
                        .HasForeignKey("FirstPlayerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BabyfootAPI.Models.Player", "SecondPlayer")
                        .WithMany("SecondPlayerGames")
                        .HasForeignKey("SecondPlayerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FirstPlayer");

                    b.Navigation("SecondPlayer");
                });

            modelBuilder.Entity("BabyfootAPI.Models.Team", b =>
                {
                    b.HasOne("BabyfootAPI.Models.Player", "FirstPlayer")
                        .WithMany("FirstPlayerTeams")
                        .HasForeignKey("FirstPlayerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BabyfootAPI.Models.Player", "SecondPlayer")
                        .WithMany("SecondPlayerTeams")
                        .HasForeignKey("SecondPlayerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FirstPlayer");

                    b.Navigation("SecondPlayer");
                });

            modelBuilder.Entity("BabyfootAPI.Models.TeamGame", b =>
                {
                    b.HasOne("BabyfootAPI.Models.Team", "FirstTeam")
                        .WithMany("FirstTeamGames")
                        .HasForeignKey("FirstTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BabyfootAPI.Models.Team", "SecondTeam")
                        .WithMany("SecondTeamGames")
                        .HasForeignKey("SecondTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FirstTeam");

                    b.Navigation("SecondTeam");
                });

            modelBuilder.Entity("BabyfootAPI.Models.Player", b =>
                {
                    b.Navigation("FirstPlayerGames");

                    b.Navigation("FirstPlayerTeams");

                    b.Navigation("SecondPlayerGames");

                    b.Navigation("SecondPlayerTeams");
                });

            modelBuilder.Entity("BabyfootAPI.Models.Rank", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("BabyfootAPI.Models.Team", b =>
                {
                    b.Navigation("FirstTeamGames");

                    b.Navigation("SecondTeamGames");
                });
#pragma warning restore 612, 618
        }
    }
}
